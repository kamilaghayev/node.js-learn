const fs = require("fs");
const pathToFile = "./app_02/index.html";
const htmlHeader = `<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>`;
let table = `
<table class="table table-striped">
    <tbody>
        <tr>
            <td>'ax'</td>
            <td>аналогично 'a', но не работает, если путь существует.
            </td>
        </tr>
        <tr>
            <td>'a'</td>
            <td>открыть файл для добавления данных. Файл создается, если он не существует.
            </td>
        </tr>
        <tr>
            <td>
                'ax'</td>
            <td> аналогично 'a', но не работает, если путь существует.
            </td>
        </tr>
        <tr>
            <td>
                'a+'</td>
            <td> открыть файл для чтения и добавления. Файл создается, если он не существует.
            </td>
        </tr>
        <tr>
            <td>
                'ax+'</td>
            <td> аналогично 'a+', но терпит неудачу, если путь существует.
            </td>
        </tr>
        <tr>
            <td>
                'as'</td>
            <td> открыть файл для добавления данных в синхронном режиме. Файл создается, если он не существует.
            </td>
        </tr>
        <tr>
            <td>
                'as+'</td>
            <td> открыть файл для чтения и добавления данных в синхронном режиме. Файл создается, если он не
                существует.
            </td>
        </tr>
        <tr>
            <td>
                'r'</td>
            <td> открыть файл для чтения. Исключение возникает, если файл не существует.
            </td>
        </tr>
        <tr>
            <td>
                'rs'</td>
            <td> открыть файл для чтения в синхронном режиме. Исключение возникает, если файл не существует.
            </td>
        </tr>
        <tr>
            <td>
                'r+'</td>
            <td> открыть файл для чтения и записи. Исключение возникает, если файл не существует.
            </td>
        </tr>
        <tr>
            <td>
                'rs+'</td>
            <td> открыть файл для чтения и записи в синхронном режиме. Указывает операционной системе обойти кеш
                локальной файловой системы.
                Это в первую очередь полезно для открытия файлов на монтировании NFS, поскольку позволяет пропустить
                потенциально устаревший локальный кеш. Это очень сильно влияет на производительность ввода-вывода,
                поэтому использовать этот флаг не рекомендуется, если в этом нет необходимости.
            </td>
        </tr>
        <tr>
            <td>
                'w'</td>
            <td> открыть файл для записи. Файл создается (если он не существует) или очищается (если он существует).
            </td>
        </tr>
        <tr>
            <td>
                'wx'</td>
            <td> аналогично 'w', но терпит неудачу, если путь существует.
            </td>
        </tr>
        <tr>
            <td>
                'w+'</td>
            <td> открыть файл для чтения и записи. Файл создается (если он не существует) или очещается (если он
                существует).
            </td>
        </tr>
        <tr>
            <td>
                'wx+'</td>
            <td> аналогично 'w+', но не работает, если путь существует.
            </td>
        </tr>
    </tbody>
</table>`
function newHtmlFil(file, text) {
    const htmlFile = `<html lang="en">\r\n${htmlHeader}\r\n<body>\r\n${text}\r\n</body>\r\n</html>
    `
    return fs.writeFileSync(file, htmlFile, {encoding: "utf8", flag: "a"});
}

newHtmlFil(pathToFile, table)